package clr

import (
	"fmt"
	"github.com/speedyhoon/cnst/clrn"
	"testing"
)

func TestC32_To16(t *testing.T) {
	tests := []struct {
		color C32
		want  string
	}{

		{color: AliceBlue, want: "#eff"},
		{color: AntiqueWhite, want: "#fed"},
		{color: Aqua, want: "#0ff"},
		{color: Aquamarine, want: "#7fc"},
		{color: Azure, want: "#eff"},
		{color: Beige, want: "#eed"},
		{color: Bisque, want: "#fdc"},
		{color: Black, want: "#000"},
		{color: BlanchedAlmond, want: "#fec"},
		{color: Blue, want: "#00f"},
		{color: BlueViolet, want: "#83d"},
		{color: Brown, want: "#a22"},
		{color: BurlyWood, want: "#db8"},
		{color: CadetBlue, want: "#699"},
		{color: Chartreuse, want: "#7f0"},
		{color: Chocolate, want: "#c62"},
		{color: Coral, want: "#f75"},
		{color: CornflowerBlue, want: "#69e"},
		{color: Cornsilk, want: "#ffd"},
		{color: Crimson, want: "#d14"},
		{color: DarkBlue, want: "#008"},
		{color: DarkCyan, want: "#088"},
		{color: DarkGoldenrod, want: "#b81"},
		{color: DarkGray, want: "#aaa"},
		{color: DarkGreen, want: "#060"},
		{color: DarkKhaki, want: "#bb6"},
		{color: DarkMagenta, want: "#808"},
		{color: DarkOliveGreen, want: "#563"},
		{color: DarkOrange, want: "#f80"},
		{color: DarkOrchid, want: "#93c"},
		{color: DarkRed, want: "#800"},
		{color: DarkSalmon, want: "#e97"},
		{color: DarkSeaGreen, want: "#8b8"},
		{color: DarkSlateBlue, want: "#448"},
		{color: DarkSlateGray, want: "#355"},
		{color: DarkTurquoise, want: "#0cc"},
		{color: DarkViolet, want: "#90c"},
		{color: DeepPink, want: "#f19"},
		{color: DeepSkyBlue, want: "#0bf"},
		{color: DimGray, want: "#666"},
		{color: DodgerBlue, want: "#28f"},
		{color: Firebrick, want: "#a22"},
		{color: FloralWhite, want: "#ffe"},
		{color: ForestGreen, want: "#282"},
		{color: Fuchsia, want: "#f0f"},
		{color: Gainsboro, want: "#ddd"},
		{color: GhostWhite, want: "#fff"},
		{color: Gold, want: "#fd0"},
		{color: Goldenrod, want: "#da2"},
		{color: Gray, want: "#888"},
		{color: Green, want: "#080"},
		{color: GreenYellow, want: "#af3"},
		{color: Honeydew, want: "#efe"},
		{color: HotPink, want: "#f6b"},
		{color: IndianRed, want: "#c55"},
		{color: Indigo, want: "#408"},
		{color: Ivory, want: "#ffe"},
		{color: Khaki, want: "#ee8"},
		{color: Lavender, want: "#eef"},
		{color: LavenderBlush, want: "#fee"},
		{color: LawnGreen, want: "#7f0"},
		{color: LemonChiffon, want: "#ffc"},
		{color: LightBlue, want: "#ade"},
		{color: LightCoral, want: "#e88"},
		{color: LightCyan, want: "#dff"},
		{color: LightGoldenrodYellow, want: "#ffc"},
		{color: LightGray, want: "#ccc"},
		{color: LightGreen, want: "#8e8"},
		{color: LightPink, want: "#fbb"},
		{color: LightSalmon, want: "#f97"},
		{color: LightSeaGreen, want: "#2aa"},
		{color: LightSkyBlue, want: "#8cf"},
		{color: LightSlateGray, want: "#789"},
		{color: LightSteelBlue, want: "#acd"},
		{color: LightYellow, want: "#ffd"},
		{color: Lime, want: "#0f0"},
		{color: LimeGreen, want: "#3c3"},
		{color: Linen, want: "#fee"},
		{color: Maroon, want: "#800"},
		{color: MediumAquamarine, want: "#6ca"},
		{color: MediumBlue, want: "#00c"},
		{color: MediumOrchid, want: "#b5c"},
		{color: MediumPurple, want: "#97d"},
		{color: MediumSeaGreen, want: "#4b7"},
		{color: MediumSlateBlue, want: "#76e"},
		{color: MediumSpringGreen, want: "#0f9"},
		{color: MediumTurquoise, want: "#4cc"},
		{color: MediumVioletRed, want: "#c18"},
		{color: MidnightBlue, want: "#117"},
		{color: MintCream, want: "#eff"},
		{color: MistyRose, want: "#fdd"},
		{color: Moccasin, want: "#fdb"},
		{color: NavajoWhite, want: "#fda"},
		{color: Navy, want: "#008"},
		{color: OldLace, want: "#fee"},
		{color: Olive, want: "#880"},
		{color: OliveDrab, want: "#682"},
		{color: Orange, want: "#fa0"},
		{color: OrangeRed, want: "#f40"},
		{color: Orchid, want: "#d7d"},
		{color: PaleGoldenrod, want: "#eea"},
		{color: PaleGreen, want: "#9f9"},
		{color: PaleTurquoise, want: "#aee"},
		{color: PaleVioletRed, want: "#d79"},
		{color: PapayaWhip, want: "#fed"},
		{color: PeachPuff, want: "#fdb"},
		{color: Peru, want: "#c84"},
		{color: Pink, want: "#fbc"},
		{color: Plum, want: "#d9d"},
		{color: PowderBlue, want: "#ade"},
		{color: Purple, want: "#808"},
		{color: RebeccaPurple, want: "#639"},
		{color: Red, want: clrn.Red},
		{color: RosyBrown, want: "#b88"},
		{color: RoyalBlue, want: "#46d"},
		{color: SaddleBrown, want: "#841"},
		{color: Salmon, want: "#f87"},
		{color: SandyBrown, want: "#ea6"},
		{color: SeaGreen, want: "#385"},
		{color: Seashell, want: "#fee"},
		{color: Sienna, want: "#953"},
		{color: Silver, want: "#bbb"},
		{color: SkyBlue, want: "#8ce"},
		{color: SlateBlue, want: "#65c"},
		{color: SlateGray, want: "#788"},
		{color: Snow, want: "#fff"},
		{color: SpringGreen, want: "#0f7"},
		{color: SteelBlue, want: "#48b"},
		{color: Tan, want: "#cb8"},
		{color: Teal, want: "#088"},
		{color: Thistle, want: "#dbd"},
		{color: Tomato, want: "#f64"},
		{color: Turquoise, want: "#4dc"},
		{color: Violet, want: "#e8e"},
		{color: Wheat, want: "#edb"},
		{color: White, want: "#fff"},
		{color: WhiteSmoke, want: "#eee"},
		{color: Yellow, want: "#ff0"},
		{color: YellowGreen, want: "#9c3"},
	}
	for _, tt := range tests {
		t.Run(tt.color.String(), func(t *testing.T) {
			if got := tt.color.To16().String(); got != tt.want {
				t.Errorf("To16(%s) = %s, want %s", tt.color.ToName(), got, tt.want)
			}
		})
	}
}

func TestRound(t *testing.T) {
	tests := []struct {
		input C32
		want  C16
	}{
		{input: 0, want: 0},
		{input: 1, want: 0},
		{input: 2, want: 0},
		{input: 3, want: 0},
		{input: 4, want: 0},
		{input: 5, want: 0},
		{input: 6, want: 0},
		{input: 7, want: 0},
		{input: 8, want: 0},
		{input: 9, want: 1},
		{input: 10, want: 1},
		{input: 11, want: 1},
		{input: 12, want: 1},
		{input: 13, want: 1},
		{input: 14, want: 1},
		{input: 15, want: 1},
		{input: 16, want: 1},
		{input: 17, want: 1},
		{input: 18, want: 1},
		{input: 19, want: 1},
		{input: 20, want: 1},
		{input: 21, want: 1},
		{input: 22, want: 1},
		{input: 23, want: 1},
		{input: 24, want: 1},
		{input: 25, want: 1},
		{input: 26, want: 2},
		{input: 27, want: 2},
		{input: 28, want: 2},
		{input: 29, want: 2},
		{input: 30, want: 2},
		{input: 31, want: 2},
		{input: 32, want: 2},
		{input: 33, want: 2},
		{input: 34, want: 2},
		{input: 35, want: 2},
		{input: 36, want: 2},
		{input: 37, want: 2},
		{input: 38, want: 2},
		{input: 39, want: 2},
		{input: 40, want: 2},
		{input: 41, want: 2},
		{input: 42, want: 2},
		{input: 43, want: 3},
		{input: 44, want: 3},
		{input: 45, want: 3},
		{input: 46, want: 3},
		{input: 47, want: 3},
		{input: 48, want: 3},
		{input: 49, want: 3},
		{input: 50, want: 3},
		{input: 51, want: 3},
		{input: 52, want: 3},
		{input: 53, want: 3},
		{input: 54, want: 3},
		{input: 55, want: 3},
		{input: 56, want: 3},
		{input: 57, want: 3},
		{input: 58, want: 3},
		{input: 59, want: 3},
		{input: 60, want: 4},
		{input: 61, want: 4},
		{input: 62, want: 4},
		{input: 63, want: 4},
		{input: 64, want: 4},
		{input: 65, want: 4},
		{input: 66, want: 4},
		{input: 67, want: 4},
		{input: 68, want: 4},
		{input: 69, want: 4},
		{input: 70, want: 4},
		{input: 71, want: 4},
		{input: 72, want: 4},
		{input: 73, want: 4},
		{input: 74, want: 4},
		{input: 75, want: 4},
		{input: 76, want: 4},
		{input: 77, want: 5},
		{input: 78, want: 5},
		{input: 79, want: 5},
		{input: 80, want: 5},
		{input: 81, want: 5},
		{input: 82, want: 5},
		{input: 83, want: 5},
		{input: 84, want: 5},
		{input: 85, want: 5},
		{input: 86, want: 5},
		{input: 87, want: 5},
		{input: 88, want: 5},
		{input: 89, want: 5},
		{input: 90, want: 5},
		{input: 91, want: 5},
		{input: 92, want: 5},
		{input: 93, want: 5},
		{input: 94, want: 6},
		{input: 95, want: 6},
		{input: 96, want: 6},
		{input: 97, want: 6},
		{input: 98, want: 6},
		{input: 99, want: 6},
		{input: 100, want: 6},
		{input: 101, want: 6},
		{input: 102, want: 6},
		{input: 103, want: 6},
		{input: 104, want: 6},
		{input: 105, want: 6},
		{input: 106, want: 6},
		{input: 107, want: 6},
		{input: 108, want: 6},
		{input: 109, want: 6},
		{input: 110, want: 6},
		{input: 111, want: 7},
		{input: 112, want: 7},
		{input: 113, want: 7},
		{input: 114, want: 7},
		{input: 115, want: 7},
		{input: 116, want: 7},
		{input: 117, want: 7},
		{input: 118, want: 7},
		{input: 119, want: 7},
		{input: 120, want: 7},
		{input: 121, want: 7},
		{input: 122, want: 7},
		{input: 123, want: 7},
		{input: 124, want: 7},
		{input: 125, want: 7},
		{input: 126, want: 7},
		{input: 127, want: 7},
		{input: 128, want: 8},
		{input: 129, want: 8},
		{input: 130, want: 8},
		{input: 131, want: 8},
		{input: 132, want: 8},
		{input: 133, want: 8},
		{input: 134, want: 8},
		{input: 135, want: 8},
		{input: 136, want: 8},
		{input: 137, want: 8},
		{input: 138, want: 8},
		{input: 139, want: 8},
		{input: 140, want: 8},
		{input: 141, want: 8},
		{input: 142, want: 8},
		{input: 143, want: 8},
		{input: 144, want: 8},
		{input: 145, want: 9},
		{input: 146, want: 9},
		{input: 147, want: 9},
		{input: 148, want: 9},
		{input: 149, want: 9},
		{input: 150, want: 9},
		{input: 151, want: 9},
		{input: 152, want: 9},
		{input: 153, want: 9},
		{input: 154, want: 9},
		{input: 155, want: 9},
		{input: 156, want: 9},
		{input: 157, want: 9},
		{input: 158, want: 9},
		{input: 159, want: 9},
		{input: 160, want: 9},
		{input: 161, want: 9},
		{input: 162, want: 10},
		{input: 163, want: 10},
		{input: 164, want: 10},
		{input: 165, want: 10},
		{input: 166, want: 10},
		{input: 167, want: 10},
		{input: 168, want: 10},
		{input: 169, want: 10},
		{input: 170, want: 10},
		{input: 171, want: 10},
		{input: 172, want: 10},
		{input: 173, want: 10},
		{input: 174, want: 10},
		{input: 175, want: 10},
		{input: 176, want: 10},
		{input: 177, want: 10},
		{input: 178, want: 10},
		{input: 179, want: 11},
		{input: 180, want: 11},
		{input: 181, want: 11},
		{input: 182, want: 11},
		{input: 183, want: 11},
		{input: 184, want: 11},
		{input: 185, want: 11},
		{input: 186, want: 11},
		{input: 187, want: 11},
		{input: 188, want: 11},
		{input: 189, want: 11},
		{input: 190, want: 11},
		{input: 191, want: 11},
		{input: 192, want: 11},
		{input: 193, want: 11},
		{input: 194, want: 11},
		{input: 195, want: 11},
		{input: 196, want: 12},
		{input: 197, want: 12},
		{input: 198, want: 12},
		{input: 199, want: 12},
		{input: 200, want: 12},
		{input: 201, want: 12},
		{input: 202, want: 12},
		{input: 203, want: 12},
		{input: 204, want: 12},
		{input: 205, want: 12},
		{input: 206, want: 12},
		{input: 207, want: 12},
		{input: 208, want: 12},
		{input: 209, want: 12},
		{input: 210, want: 12},
		{input: 211, want: 12},
		{input: 212, want: 12},
		{input: 213, want: 13},
		{input: 214, want: 13},
		{input: 215, want: 13},
		{input: 216, want: 13},
		{input: 217, want: 13},
		{input: 218, want: 13},
		{input: 219, want: 13},
		{input: 220, want: 13},
		{input: 221, want: 13},
		{input: 222, want: 13},
		{input: 223, want: 13},
		{input: 224, want: 13},
		{input: 225, want: 13},
		{input: 226, want: 13},
		{input: 227, want: 13},
		{input: 228, want: 13},
		{input: 229, want: 13},
		{input: 230, want: 14},
		{input: 231, want: 14},
		{input: 232, want: 14},
		{input: 233, want: 14},
		{input: 234, want: 14},
		{input: 235, want: 14},
		{input: 236, want: 14},
		{input: 237, want: 14},
		{input: 238, want: 14},
		{input: 239, want: 14},
		{input: 240, want: 14},
		{input: 241, want: 14},
		{input: 242, want: 14},
		{input: 243, want: 14},
		{input: 244, want: 14},
		{input: 245, want: 14},
		{input: 246, want: 14},
		{input: 247, want: 15},
		{input: 248, want: 15},
		{input: 249, want: 15},
		{input: 250, want: 15},
		{input: 251, want: 15},
		{input: 252, want: 15},
		{input: 253, want: 15},
		{input: 254, want: 15},
		{input: 255, want: 15},
	}

	for _, tt := range tests {
		t.Run(fmt.Sprintf("%0x", tt.input), func(t *testing.T) {
			//t.Run(tt.name, func(t *testing.T) {
			if got := Round(tt.input); got != tt.want {
				t.Errorf("Rounder(%d) = %v, want %v", tt.input, got, tt.want)
			}
		})
	}
}
